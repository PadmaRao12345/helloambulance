<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">




	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
<!-- 	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	<context:component-scan base-package="com.realcom.helloambulance.*" />
	
	<context:property-placeholder location="classpath:HelloAmbulanceData.properties" />
	
	
	<!-- mysql datasource to the database -->
	<beans:bean id="lottoExpressDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="${db.driver}" />
		<beans:property name="url" value="${db.url}" />
		<beans:property name="username" value="${db.user}" />
		<beans:property name="password" value="${db.password}" />
		<beans:property name="poolPreparedStatements" value="true" />
		<beans:property name="maxIdle" value="10" />
		<beans:property name="validationQuery" value="SELECT 1" />
		<beans:property name="testOnBorrow" value="true" />
	</beans:bean>

	<!-- spring transaction manager -->
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="lottoExpressDataSource" />
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="lottoExpressDataSource" />
	</beans:bean>

	<!-- Email Configuration -->

	<beans:bean id="emailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="username" value="helloambulance2018@gmail.com" />
		<beans:property name="password" value="realcom2018" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.socketFactory.port">465</beans:prop>
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory
				</beans:prop>
				<beans:prop key="mail.smtp.port">465</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.mime.charset">UTF-8</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
 	<beans:bean id="emailMail" class="com.realcom.helloambulance.services.Mailer">
		<!-- <beans:property name="mailSender" ref="emailSender" /> -->
		<beans:property name="velocityEngine" ref="velocityEngine" />
	</beans:bean>
	<beans:bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<beans:property name="velocityProperties">
			<beans:props>
				<beans:prop key="resource.loader">class</beans:prop>
				<beans:prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Apache Tiles Configuration -->
	<beans:bean id="viewResolver"	class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions" value="/WEB-INF/views/tiles/tiles.xml"></beans:property>
	</beans:bean>
	    
	    
	    <!-- image -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5000000" />
		<!-- Maximum Size Of The File In Memory (In Bytes) -->
		<beans:property name="maxInMemorySize" value="6000000" />
	</beans:bean>

	<beans:bean id="messageSource"

		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

		<beans:property name="basename" value="/WEB-INF/resources" />

	</beans:bean>
	    
	    
 <!--  <beans:bean id="encoder" 
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	<beans:constructor-arg name="strength" value="11" />
  </beans:bean>
	 -->
	<!--  <beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
   <beans:property name="exceptionMappings">
      <beans:props>
         <beans:prop key="java.lang.Throwable">error</beans:prop>
      </beans:props>
   </beans:property>
</beans:bean> -->
	 
</beans:beans>
